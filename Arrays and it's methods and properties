// Arrays
let marks_class_12 = [91, 82, 63, 84, false, "Not Present"];
console.log(marks_class_12);
console.log(marks_class_12[0]);
console.log(marks_class_12[1]);
console.log(marks_class_12[2]);
console.log(marks_class_12[3]);
console.log(marks_class_12[4]);
console.log(marks_class_12[5]);
console.log(marks_class_12[6]); // will be undefined because index 6 does not exist  
console.log("The length of marks_class_12 is", marks_class_12.length);
marks_class_12[6] = 89; // Adding a new value to the array
marks_class_12[0] = 96; // Changing the value of an array
console.log(marks_class_12);
console.log(typeof marks_class_12);


// printing array using for loop
let NameOftheStudent = ["Abhi", "Surbhi", "Labhesh", "Kiran", "Sunil", "Shinchan"];
for(let i = 0; i < NameOftheStudent.length; i++){
  console.log(NameOftheStudent[i]);
}
// Array methods
let num = [1, 2, 3, 34, 34];
let b1 = num.toString(); // b is now a string
console.log(b1, typeof b1);
let c1 = num.join(" and "); // c is now a string
console.log(c1, typeof c1);
let e1 = num.pop(); // pop returns the popped element and remove the last element
console.log(num, e1);
let f1 = num.push(56); // push returns the new array length and add the element at the end
console.log(num, f1);
let g1 = num.shift(); // shift returns the shifted element and remove the first element
console.log(num, g1);
let h1 = num.unshift(78); // unshift returns the new array length and add the element at the beginning
console.log(num, h1);
//let j1 = num.delete(2); // delete returns true and delete the element at the given index
//console.log(num, j1);
let k1 = num.concat(1, 22, 3, 42, 5); // concat returns the new array and add the elements at the end
console.log(num, k1, k1.length );
// const m1 = [2,5,7,1,3,33,22,55,4,9]
// let l1 = m1.sort(); // sort returns the sorted array
// console.log("Array of K1 is "+ m1 , "Array of l1 is "+ l1);

const m1 = [2, 5, 7, 1, 3, 33, 22, 55, 4, 9];
let l1 = m1.sort((a, b) => a - b); // Sort numerically
console.log(`Array of m1 is ${m1}`);
console.log(`Array of l1 is ${l1}`);


const months = ["Jan", "Feb", "Mar", "Apr"];
const sorted = months.toSorted();
console.log(months,sorted);

const fruits = ["Banana", "Orange", "Apple", "Mango"];
console.log(fruits.sort());
let n1 = num.splice(2, 3, 1021, 1022, 1023, 1024, 1025);
 // splice returns the deleted elements and add the elements at the given index
console.log(num, n1);
let o1 = num.slice(3);
 // slice returns the new array and remove the elements from the given index to the end
console.log(num, o1);
let p1 = num.reverse(); // reverse returns the reversed array
console.log( p1);

// Using loops with arrays
let numbers = [11,22,33,44,55,66,77,88,99];
for (let i = 0; i <numbers.length; i++){
  console.log(numbers[i]);
}
// Array from
let name5 = "Abhishek";
let arr = Array.from(name5);
console.log(arr);
// for of loop
let numbers1 = [11,22,33,44,55,66,77,88,99];
for(let i of numbers1){
  console.log(i);
}
// for in loop
let numbers2 = [11,22,33,44,55,66,77,88,99];
for(let i in numbers2){
  console.log(i); // print index
  console.log(numbers2[i]); // print value
}
// for each loop
let numbers3 = [1,2,3,4,5,6,7,8,9];

numbers3.forEach ((element) => {
  console.log(element * element);
});

// Array map method
let ar1 = [40, 2, 20, 30, 45, 50];

let a2 = ar1.map((value, index, array) => {
  // map returns the new array and apply the function to each element of the array
  console.log(value, index, array);
  return value + index;
});
console.log(a2);

// Array filter method (returns the new array and apply the function to each element of the array)

let ar2 = [40, 2, 20, 30, 40, 50];
// let ar3 =ar2.filter((a)=> {
//   return a<30;
// })

// function can be defined outside the filter method

let lessThen30 = (a) => {
  return a < 30;
};
let ar3 = ar2.filter(lessThen30);
console.log(ar3);

// Array reduce method (returns the single value and apply the function to each element of the array)

let ar4 = [1, 2, 3, 4, 5, 6, 7, 8, 9];
// let ar5 =ar4.reduce((x , y) =>
//{return x+y;}
// );

// function can be defined outside the reduce method

let sumOfArray = (x , y) => {
  return x+y;
}
let ar5 = ar4.reduce(sumOfArray);
console.log(ar5);

